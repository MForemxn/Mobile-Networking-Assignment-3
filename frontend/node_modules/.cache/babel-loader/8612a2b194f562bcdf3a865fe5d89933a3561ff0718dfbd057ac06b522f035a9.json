{"ast":null,"code":"var _jsxFileName = \"/Users/masonforeman/Library/Mobile Documents/com~apple~CloudDocs/University/Year 2/Spring/Mobile Networking/Assignments/Assignment 3/frontend/src/TrafficGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport websocketService from './services/websocketService';\n\n/*\n  Traffic Grid Simulation - C-V2X Emergency Signal Preemption\n  \n  Demonstrates how traffic lights respond to C-V2X emergency broadcasts\n  by creating a \"green wave\" for the ambulance path\n  \n  Features:\n  - Large grid of intersections (e.g., 5x5 = 25 traffic lights)\n  - Ambulance controlled by host computer\n  - Traffic lights change to green on ambulance's path\n  - All students see the same synchronized view (Menti-style)\n  - Emergency signal triggers coordinated light changes\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 5; // 5x5 grid = 25 intersections\nconst CELL_SIZE = 120; // Size of each intersection cell in pixels\n\nfunction TrafficGrid() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [emergencyActive, setEmergencyActive] = useState(false);\n  const [ambulancePos, setAmbulancePos] = useState({\n    x: 0,\n    y: 2\n  }); // Start at left, middle\n  const [ambulanceDirection, setAmbulanceDirection] = useState('right');\n  const [trafficLights, setTrafficLights] = useState({});\n  const [viewerCount, setViewerCount] = useState(0);\n\n  // Initialize traffic lights\n  useEffect(() => {\n    const lights = {};\n    for (let x = 0; x < GRID_SIZE; x++) {\n      for (let y = 0; y < GRID_SIZE; y++) {\n        const key = `${x},${y}`;\n        lights[key] = {\n          nsLight: Math.random() > 0.5 ? 'green' : 'red',\n          // North-South\n          ewLight: Math.random() > 0.5 ? 'green' : 'red' // East-West\n        };\n      }\n    }\n    setTrafficLights(lights);\n\n    // Cycle traffic lights periodically\n    const interval = setInterval(() => {\n      setTrafficLights(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.keys(updated).forEach(key => {\n          if (!emergencyActive) {\n            // Normal operation: alternate N-S and E-W\n            const light = updated[key];\n            if (light.nsLight === 'green') {\n              light.nsLight = 'yellow';\n            } else if (light.nsLight === 'yellow') {\n              light.nsLight = 'red';\n              light.ewLight = 'green';\n            } else if (light.ewLight === 'green') {\n              light.ewLight = 'yellow';\n            } else if (light.ewLight === 'yellow') {\n              light.ewLight = 'red';\n              light.nsLight = 'green';\n            }\n          }\n        });\n        return updated;\n      });\n    }, 3000); // Change every 3 seconds\n\n    return () => clearInterval(interval);\n  }, [emergencyActive]);\n\n  // Handle WebSocket messages\n  const handleWebSocketMessage = useCallback(data => {\n    switch (data.type) {\n      case 'system_state':\n        setViewerCount(Object.keys(data.devices || {}).length);\n        break;\n      case 'emergency_takeover':\n      case 'emergency_signal':\n        setEmergencyActive(true);\n        console.log('ðŸš¨ Emergency detected - activating signal preemption');\n        break;\n      case 'emergency_cleared':\n        setEmergencyActive(false);\n        console.log('ðŸŸ¢ Emergency cleared - resuming normal operation');\n        break;\n      case 'ambulance_position':\n        // Host controls ambulance position\n        setAmbulancePos(data.position);\n        setAmbulanceDirection(data.direction);\n        greenWaveForAmbulance(data.position, data.direction);\n        break;\n      default:\n        break;\n    }\n  }, []);\n\n  // Initialize WebSocket\n  useEffect(() => {\n    const handleConnected = () => setIsConnected(true);\n    const handleDisconnected = () => setIsConnected(false);\n    websocketService.addEventListener('connected', handleConnected);\n    websocketService.addEventListener('disconnected', handleDisconnected);\n    websocketService.addEventListener('systemState', handleWebSocketMessage);\n    websocketService.addEventListener('emergencySignal', handleWebSocketMessage);\n    websocketService.addEventListener('emergencyTakeover', handleWebSocketMessage);\n    websocketService.addEventListener('emergencyCleared', handleWebSocketMessage);\n    if (!websocketService.isConnected) {\n      websocketService.connect();\n    } else {\n      setIsConnected(true);\n    }\n    return () => {\n      websocketService.removeEventListener('connected', handleConnected);\n      websocketService.removeEventListener('disconnected', handleDisconnected);\n      websocketService.removeEventListener('systemState', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencySignal', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencyTakeover', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencyCleared', handleWebSocketMessage);\n    };\n  }, [handleWebSocketMessage]);\n\n  // Create green wave for ambulance\n  const greenWaveForAmbulance = (pos, direction) => {\n    setTrafficLights(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // Make current intersection green\n      const currentKey = `${pos.x},${pos.y}`;\n      if (updated[currentKey]) {\n        if (direction === 'right' || direction === 'left') {\n          updated[currentKey].ewLight = 'green';\n          updated[currentKey].nsLight = 'red';\n        } else {\n          updated[currentKey].nsLight = 'green';\n          updated[currentKey].ewLight = 'red';\n        }\n      }\n\n      // Preempt next 2 intersections ahead\n      for (let i = 1; i <= 2; i++) {\n        let nextKey;\n        if (direction === 'right') nextKey = `${pos.x + i},${pos.y}`;else if (direction === 'left') nextKey = `${pos.x - i},${pos.y}`;else if (direction === 'down') nextKey = `${pos.x},${pos.y + i}`;else if (direction === 'up') nextKey = `${pos.x},${pos.y - i}`;\n        if (updated[nextKey]) {\n          if (direction === 'right' || direction === 'left') {\n            updated[nextKey].ewLight = 'green';\n            updated[nextKey].nsLight = 'red';\n          } else {\n            updated[nextKey].nsLight = 'green';\n            updated[nextKey].ewLight = 'red';\n          }\n        }\n      }\n      return updated;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      backgroundColor: '#f0f0f0',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDEA6 C-V2X Traffic Signal Preemption Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '18px',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: '20px'\n          },\n          children: [\"\\uD83D\\uDC65 Viewers: \", viewerCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            padding: '5px 15px',\n            borderRadius: '20px',\n            backgroundColor: emergencyActive ? '#dc3545' : '#28a745',\n            color: 'white',\n            fontWeight: 'bold'\n          },\n          children: emergencyActive ? 'ðŸš¨ EMERGENCY ACTIVE' : 'ðŸŸ¢ NORMAL OPERATION'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          fontSize: '14px',\n          color: '#666'\n        },\n        children: emergencyActive ? 'ðŸ“¡ C-V2X Emergency Signal Received - Creating Green Wave' : 'Traffic lights operating normally - Waiting for emergency'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block',\n        backgroundColor: '#2c3e50',\n        padding: '20px',\n        borderRadius: '10px',\n        boxShadow: '0 4px 6px rgba(0,0,0,0.3)'\n      },\n      children: Array.from({\n        length: GRID_SIZE\n      }).map((_, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: Array.from({\n          length: GRID_SIZE\n        }).map((_, x) => {\n          const key = `${x},${y}`;\n          const light = trafficLights[key] || {\n            nsLight: 'red',\n            ewLight: 'red'\n          };\n          const hasAmbulance = ambulancePos.x === x && ambulancePos.y === y;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: `${CELL_SIZE}px`,\n              height: `${CELL_SIZE}px`,\n              backgroundColor: '#34495e',\n              border: '2px solid #1a252f',\n              position: 'relative',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                width: '30%',\n                height: '100%',\n                backgroundColor: '#444',\n                left: '35%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                width: '100%',\n                height: '30%',\n                backgroundColor: '#444',\n                top: '35%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                zIndex: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  top: '-40px',\n                  left: '-5px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: '2px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '10px',\n                    height: '10px',\n                    borderRadius: '50%',\n                    backgroundColor: light.nsLight === 'green' ? '#00ff00' : '#003300',\n                    boxShadow: light.nsLight === 'green' ? '0 0 10px #00ff00' : 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '10px',\n                    height: '10px',\n                    borderRadius: '50%',\n                    backgroundColor: light.nsLight === 'yellow' ? '#ffff00' : '#333300',\n                    boxShadow: light.nsLight === 'yellow' ? '0 0 10px #ffff00' : 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '10px',\n                    height: '10px',\n                    borderRadius: '50%',\n                    backgroundColor: light.nsLight === 'red' ? '#ff0000' : '#330000',\n                    boxShadow: light.nsLight === 'red' ? '0 0 10px #ff0000' : 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  top: '-5px',\n                  left: '20px',\n                  display: 'flex',\n                  gap: '2px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '10px',\n                    height: '10px',\n                    borderRadius: '50%',\n                    backgroundColor: light.ewLight === 'green' ? '#00ff00' : '#003300',\n                    boxShadow: light.ewLight === 'green' ? '0 0 10px #00ff00' : 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '10px',\n                    height: '10px',\n                    borderRadius: '50%',\n                    backgroundColor: light.ewLight === 'yellow' ? '#ffff00' : '#333300',\n                    boxShadow: light.ewLight === 'yellow' ? '0 0 10px #ffff00' : 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '10px',\n                    height: '10px',\n                    borderRadius: '50%',\n                    backgroundColor: light.ewLight === 'red' ? '#ff0000' : '#330000',\n                    boxShadow: light.ewLight === 'red' ? '0 0 10px #ff0000' : 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this), hasAmbulance && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                fontSize: '40px',\n                zIndex: 20,\n                animation: emergencyActive ? 'pulse 1s infinite' : 'none',\n                filter: emergencyActive ? 'drop-shadow(0 0 10px red)' : 'none'\n              },\n              children: \"\\uD83D\\uDE91\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                bottom: '2px',\n                right: '2px',\n                fontSize: '8px',\n                color: '#666'\n              },\n              children: [x, \",\", y]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this);\n        })\n      }, y, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        fontSize: '14px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How It Works:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          lineHeight: '1.8'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDEA6 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Normal Mode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 18\n          }, this), \" Traffic lights cycle randomly (red \\u2192 green \\u2192 yellow)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDEA8 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Emergency Mode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 18\n          }, this), \" When LoRa signal detected, lights turn green on ambulance path\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCE1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"C-V2X Signal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 18\n          }, this), \" Emergency vehicle broadcasts position & route via LoRa\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83C\\uDFAE \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Host Controls:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 18\n          }, this), \" Instructor controls ambulance path using arrow keys or interface\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDC65 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Synchronized View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 18\n          }, this), \" All \", viewerCount, \" viewers see the same traffic grid in real-time\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), emergencyActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: 'rgba(220, 53, 69, 0.9)',\n        color: 'white',\n        padding: '20px 40px',\n        borderRadius: '10px',\n        fontSize: '24px',\n        fontWeight: 'bold',\n        zIndex: 1000,\n        boxShadow: '0 0 20px rgba(220, 53, 69, 0.8)',\n        animation: 'pulse 1s infinite'\n      },\n      children: \"\\uD83D\\uDEA8 EMERGENCY VEHICLE APPROACHING \\uD83D\\uDEA8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes pulse {\n          0%, 100% { opacity: 1; transform: scale(1); }\n          50% { opacity: 0.7; transform: scale(1.05); }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(TrafficGrid, \"TLd/7xW7oegy5H6+e6qmETR6Se4=\");\n_c = TrafficGrid;\nexport default TrafficGrid;\nvar _c;\n$RefreshReg$(_c, \"TrafficGrid\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","websocketService","jsxDEV","_jsxDEV","GRID_SIZE","CELL_SIZE","TrafficGrid","_s","isConnected","setIsConnected","emergencyActive","setEmergencyActive","ambulancePos","setAmbulancePos","x","y","ambulanceDirection","setAmbulanceDirection","trafficLights","setTrafficLights","viewerCount","setViewerCount","lights","key","nsLight","Math","random","ewLight","interval","setInterval","prev","updated","Object","keys","forEach","light","clearInterval","handleWebSocketMessage","data","type","devices","length","console","log","position","direction","greenWaveForAmbulance","handleConnected","handleDisconnected","addEventListener","connect","removeEventListener","pos","currentKey","i","nextKey","style","padding","backgroundColor","minHeight","children","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","marginTop","marginRight","borderRadius","color","fontWeight","display","boxShadow","Array","from","map","_","hasAmbulance","width","height","border","alignItems","justifyContent","left","top","zIndex","flexDirection","gap","animation","filter","bottom","right","lineHeight","transform","_c","$RefreshReg$"],"sources":["/Users/masonforeman/Library/Mobile Documents/com~apple~CloudDocs/University/Year 2/Spring/Mobile Networking/Assignments/Assignment 3/frontend/src/TrafficGrid.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport websocketService from './services/websocketService';\n\n/*\n  Traffic Grid Simulation - C-V2X Emergency Signal Preemption\n  \n  Demonstrates how traffic lights respond to C-V2X emergency broadcasts\n  by creating a \"green wave\" for the ambulance path\n  \n  Features:\n  - Large grid of intersections (e.g., 5x5 = 25 traffic lights)\n  - Ambulance controlled by host computer\n  - Traffic lights change to green on ambulance's path\n  - All students see the same synchronized view (Menti-style)\n  - Emergency signal triggers coordinated light changes\n*/\n\nconst GRID_SIZE = 5;  // 5x5 grid = 25 intersections\nconst CELL_SIZE = 120;  // Size of each intersection cell in pixels\n\nfunction TrafficGrid() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [emergencyActive, setEmergencyActive] = useState(false);\n  const [ambulancePos, setAmbulancePos] = useState({ x: 0, y: 2 });  // Start at left, middle\n  const [ambulanceDirection, setAmbulanceDirection] = useState('right');\n  const [trafficLights, setTrafficLights] = useState({});\n  const [viewerCount, setViewerCount] = useState(0);\n\n  // Initialize traffic lights\n  useEffect(() => {\n    const lights = {};\n    for (let x = 0; x < GRID_SIZE; x++) {\n      for (let y = 0; y < GRID_SIZE; y++) {\n        const key = `${x},${y}`;\n        lights[key] = {\n          nsLight: Math.random() > 0.5 ? 'green' : 'red',  // North-South\n          ewLight: Math.random() > 0.5 ? 'green' : 'red',  // East-West\n        };\n      }\n    }\n    setTrafficLights(lights);\n\n    // Cycle traffic lights periodically\n    const interval = setInterval(() => {\n      setTrafficLights(prev => {\n        const updated = { ...prev };\n        Object.keys(updated).forEach(key => {\n          if (!emergencyActive) {\n            // Normal operation: alternate N-S and E-W\n            const light = updated[key];\n            if (light.nsLight === 'green') {\n              light.nsLight = 'yellow';\n            } else if (light.nsLight === 'yellow') {\n              light.nsLight = 'red';\n              light.ewLight = 'green';\n            } else if (light.ewLight === 'green') {\n              light.ewLight = 'yellow';\n            } else if (light.ewLight === 'yellow') {\n              light.ewLight = 'red';\n              light.nsLight = 'green';\n            }\n          }\n        });\n        return updated;\n      });\n    }, 3000);  // Change every 3 seconds\n\n    return () => clearInterval(interval);\n  }, [emergencyActive]);\n\n  // Handle WebSocket messages\n  const handleWebSocketMessage = useCallback((data) => {\n    switch (data.type) {\n      case 'system_state':\n        setViewerCount(Object.keys(data.devices || {}).length);\n        break;\n\n      case 'emergency_takeover':\n      case 'emergency_signal':\n        setEmergencyActive(true);\n        console.log('ðŸš¨ Emergency detected - activating signal preemption');\n        break;\n\n      case 'emergency_cleared':\n        setEmergencyActive(false);\n        console.log('ðŸŸ¢ Emergency cleared - resuming normal operation');\n        break;\n\n      case 'ambulance_position':\n        // Host controls ambulance position\n        setAmbulancePos(data.position);\n        setAmbulanceDirection(data.direction);\n        greenWaveForAmbulance(data.position, data.direction);\n        break;\n\n      default:\n        break;\n    }\n  }, []);\n\n  // Initialize WebSocket\n  useEffect(() => {\n    const handleConnected = () => setIsConnected(true);\n    const handleDisconnected = () => setIsConnected(false);\n\n    websocketService.addEventListener('connected', handleConnected);\n    websocketService.addEventListener('disconnected', handleDisconnected);\n    websocketService.addEventListener('systemState', handleWebSocketMessage);\n    websocketService.addEventListener('emergencySignal', handleWebSocketMessage);\n    websocketService.addEventListener('emergencyTakeover', handleWebSocketMessage);\n    websocketService.addEventListener('emergencyCleared', handleWebSocketMessage);\n\n    if (!websocketService.isConnected) {\n      websocketService.connect();\n    } else {\n      setIsConnected(true);\n    }\n\n    return () => {\n      websocketService.removeEventListener('connected', handleConnected);\n      websocketService.removeEventListener('disconnected', handleDisconnected);\n      websocketService.removeEventListener('systemState', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencySignal', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencyTakeover', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencyCleared', handleWebSocketMessage);\n    };\n  }, [handleWebSocketMessage]);\n\n  // Create green wave for ambulance\n  const greenWaveForAmbulance = (pos, direction) => {\n    setTrafficLights(prev => {\n      const updated = { ...prev };\n      \n      // Make current intersection green\n      const currentKey = `${pos.x},${pos.y}`;\n      if (updated[currentKey]) {\n        if (direction === 'right' || direction === 'left') {\n          updated[currentKey].ewLight = 'green';\n          updated[currentKey].nsLight = 'red';\n        } else {\n          updated[currentKey].nsLight = 'green';\n          updated[currentKey].ewLight = 'red';\n        }\n      }\n      \n      // Preempt next 2 intersections ahead\n      for (let i = 1; i <= 2; i++) {\n        let nextKey;\n        if (direction === 'right') nextKey = `${pos.x + i},${pos.y}`;\n        else if (direction === 'left') nextKey = `${pos.x - i},${pos.y}`;\n        else if (direction === 'down') nextKey = `${pos.x},${pos.y + i}`;\n        else if (direction === 'up') nextKey = `${pos.x},${pos.y - i}`;\n        \n        if (updated[nextKey]) {\n          if (direction === 'right' || direction === 'left') {\n            updated[nextKey].ewLight = 'green';\n            updated[nextKey].nsLight = 'red';\n          } else {\n            updated[nextKey].nsLight = 'green';\n            updated[nextKey].ewLight = 'red';\n          }\n        }\n      }\n      \n      return updated;\n    });\n  };\n\n  return (\n    <div style={{ padding: '20px', backgroundColor: '#f0f0f0', minHeight: '100vh' }}>\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n        <h1>ðŸš¦ C-V2X Traffic Signal Preemption Demo</h1>\n        <div style={{ fontSize: '18px', marginTop: '10px' }}>\n          <span style={{ marginRight: '20px' }}>\n            ðŸ‘¥ Viewers: {viewerCount}\n          </span>\n          <span style={{ \n            padding: '5px 15px', \n            borderRadius: '20px',\n            backgroundColor: emergencyActive ? '#dc3545' : '#28a745',\n            color: 'white',\n            fontWeight: 'bold'\n          }}>\n            {emergencyActive ? 'ðŸš¨ EMERGENCY ACTIVE' : 'ðŸŸ¢ NORMAL OPERATION'}\n          </span>\n        </div>\n        <div style={{ marginTop: '10px', fontSize: '14px', color: '#666' }}>\n          {emergencyActive ? \n            'ðŸ“¡ C-V2X Emergency Signal Received - Creating Green Wave' :\n            'Traffic lights operating normally - Waiting for emergency'}\n        </div>\n      </div>\n\n      {/* Traffic Grid */}\n      <div style={{ \n        display: 'inline-block',\n        backgroundColor: '#2c3e50',\n        padding: '20px',\n        borderRadius: '10px',\n        boxShadow: '0 4px 6px rgba(0,0,0,0.3)'\n      }}>\n        {Array.from({ length: GRID_SIZE }).map((_, y) => (\n          <div key={y} style={{ display: 'flex' }}>\n            {Array.from({ length: GRID_SIZE }).map((_, x) => {\n              const key = `${x},${y}`;\n              const light = trafficLights[key] || { nsLight: 'red', ewLight: 'red' };\n              const hasAmbulance = ambulancePos.x === x && ambulancePos.y === y;\n              \n              return (\n                <div\n                  key={key}\n                  style={{\n                    width: `${CELL_SIZE}px`,\n                    height: `${CELL_SIZE}px`,\n                    backgroundColor: '#34495e',\n                    border: '2px solid #1a252f',\n                    position: 'relative',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  {/* Roads */}\n                  <div style={{\n                    position: 'absolute',\n                    width: '30%',\n                    height: '100%',\n                    backgroundColor: '#444',\n                    left: '35%'\n                  }} />\n                  <div style={{\n                    position: 'absolute',\n                    width: '100%',\n                    height: '30%',\n                    backgroundColor: '#444',\n                    top: '35%'\n                  }} />\n\n                  {/* Traffic Lights */}\n                  <div style={{ position: 'absolute', zIndex: 10 }}>\n                    {/* North-South Light */}\n                    <div style={{\n                      position: 'absolute',\n                      top: '-40px',\n                      left: '-5px',\n                      display: 'flex',\n                      flexDirection: 'column',\n                      gap: '2px'\n                    }}>\n                      <div style={{\n                        width: '10px',\n                        height: '10px',\n                        borderRadius: '50%',\n                        backgroundColor: light.nsLight === 'green' ? '#00ff00' : '#003300',\n                        boxShadow: light.nsLight === 'green' ? '0 0 10px #00ff00' : 'none'\n                      }} />\n                      <div style={{\n                        width: '10px',\n                        height: '10px',\n                        borderRadius: '50%',\n                        backgroundColor: light.nsLight === 'yellow' ? '#ffff00' : '#333300',\n                        boxShadow: light.nsLight === 'yellow' ? '0 0 10px #ffff00' : 'none'\n                      }} />\n                      <div style={{\n                        width: '10px',\n                        height: '10px',\n                        borderRadius: '50%',\n                        backgroundColor: light.nsLight === 'red' ? '#ff0000' : '#330000',\n                        boxShadow: light.nsLight === 'red' ? '0 0 10px #ff0000' : 'none'\n                      }} />\n                    </div>\n\n                    {/* East-West Light */}\n                    <div style={{\n                      position: 'absolute',\n                      top: '-5px',\n                      left: '20px',\n                      display: 'flex',\n                      gap: '2px'\n                    }}>\n                      <div style={{\n                        width: '10px',\n                        height: '10px',\n                        borderRadius: '50%',\n                        backgroundColor: light.ewLight === 'green' ? '#00ff00' : '#003300',\n                        boxShadow: light.ewLight === 'green' ? '0 0 10px #00ff00' : 'none'\n                      }} />\n                      <div style={{\n                        width: '10px',\n                        height: '10px',\n                        borderRadius: '50%',\n                        backgroundColor: light.ewLight === 'yellow' ? '#ffff00' : '#333300',\n                        boxShadow: light.ewLight === 'yellow' ? '0 0 10px #ffff00' : 'none'\n                      }} />\n                      <div style={{\n                        width: '10px',\n                        height: '10px',\n                        borderRadius: '50%',\n                        backgroundColor: light.ewLight === 'red' ? '#ff0000' : '#330000',\n                        boxShadow: light.ewLight === 'red' ? '0 0 10px #ff0000' : 'none'\n                      }} />\n                    </div>\n                  </div>\n\n                  {/* Ambulance */}\n                  {hasAmbulance && (\n                    <div style={{\n                      position: 'absolute',\n                      fontSize: '40px',\n                      zIndex: 20,\n                      animation: emergencyActive ? 'pulse 1s infinite' : 'none',\n                      filter: emergencyActive ? 'drop-shadow(0 0 10px red)' : 'none'\n                    }}>\n                      ðŸš‘\n                    </div>\n                  )}\n                  \n                  {/* Grid coordinates (for debugging) */}\n                  <div style={{\n                    position: 'absolute',\n                    bottom: '2px',\n                    right: '2px',\n                    fontSize: '8px',\n                    color: '#666'\n                  }}>\n                    {x},{y}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ))}\n      </div>\n\n      {/* Legend */}\n      <div style={{ marginTop: '20px', fontSize: '14px' }}>\n        <h3>How It Works:</h3>\n        <ul style={{ lineHeight: '1.8' }}>\n          <li>ðŸš¦ <strong>Normal Mode:</strong> Traffic lights cycle randomly (red â†’ green â†’ yellow)</li>\n          <li>ðŸš¨ <strong>Emergency Mode:</strong> When LoRa signal detected, lights turn green on ambulance path</li>\n          <li>ðŸ“¡ <strong>C-V2X Signal:</strong> Emergency vehicle broadcasts position & route via LoRa</li>\n          <li>ðŸŽ® <strong>Host Controls:</strong> Instructor controls ambulance path using arrow keys or interface</li>\n          <li>ðŸ‘¥ <strong>Synchronized View:</strong> All {viewerCount} viewers see the same traffic grid in real-time</li>\n        </ul>\n      </div>\n\n      {/* Emergency Indicator */}\n      {emergencyActive && (\n        <div style={{\n          position: 'fixed',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          backgroundColor: 'rgba(220, 53, 69, 0.9)',\n          color: 'white',\n          padding: '20px 40px',\n          borderRadius: '10px',\n          fontSize: '24px',\n          fontWeight: 'bold',\n          zIndex: 1000,\n          boxShadow: '0 0 20px rgba(220, 53, 69, 0.8)',\n          animation: 'pulse 1s infinite'\n        }}>\n          ðŸš¨ EMERGENCY VEHICLE APPROACHING ðŸš¨\n        </div>\n      )}\n\n      <style>{`\n        @keyframes pulse {\n          0%, 100% { opacity: 1; transform: scale(1); }\n          50% { opacity: 0.7; transform: scale(1.05); }\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default TrafficGrid;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}