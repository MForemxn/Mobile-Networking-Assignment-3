{"ast":null,"code":"var _jsxFileName = \"/Users/masonforeman/Library/Mobile Documents/com~apple~CloudDocs/University/Year 2/Spring/Mobile Networking/Assignments/Assignment 3/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './index.css';\nimport websocketService from './services/websocketService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VEHICLE_TYPES = {\n  regular_car: {\n    name: 'Car',\n    color: 'regular',\n    width: 40,\n    height: 20\n  },\n  truck: {\n    name: 'Truck',\n    color: 'truck',\n    width: 50,\n    height: 20\n  },\n  motorcycle: {\n    name: 'Motorcycle',\n    color: 'motorcycle',\n    width: 30,\n    height: 15\n  },\n  emergency_vehicle: {\n    name: 'Emergency',\n    color: 'emergency',\n    width: 40,\n    height: 20\n  }\n};\nconst LANES = {\n  1: {\n    name: 'Left Lane',\n    y: 0\n  },\n  2: {\n    name: 'Middle Lane',\n    y: 50\n  },\n  3: {\n    name: 'Right Lane',\n    y: 100\n  }\n};\nfunction App() {\n  _s();\n  var _VEHICLE_TYPES$vehicl3;\n  const [isConnected, setIsConnected] = useState(false);\n  const [deviceId, setDeviceId] = useState(null);\n  const [vehicleType, setVehicleType] = useState(null);\n  const [isEmergencyVehicle, setIsEmergencyVehicle] = useState(false);\n  const [emergencyActive, setEmergencyActive] = useState(false);\n  const [vehicles, setVehicles] = useState({});\n  const [connectionError, setConnectionError] = useState(null);\n  const [laneChanges, setLaneChanges] = useState({});\n\n  // Handle WebSocket messages\n  const handleWebSocketMessage = useCallback(data => {\n    var _data$emergency_statu;\n    switch (data.type) {\n      case 'welcome':\n        setDeviceId(data.device_id);\n        setVehicleType(data.vehicle_type);\n        setIsEmergencyVehicle(data.vehicle_type === 'emergency_vehicle');\n        break;\n      case 'system_state':\n        setVehicles(data.devices || {});\n        if ((_data$emergency_statu = data.emergency_status) !== null && _data$emergency_statu !== void 0 && _data$emergency_statu.active_emergency_device) {\n          setEmergencyActive(true);\n        }\n        break;\n      case 'position_update':\n        setVehicles(prev => ({\n          ...prev,\n          [data.device_id]: {\n            ...prev[data.device_id],\n            ...data.position\n          }\n        }));\n        break;\n      case 'lane_change':\n        // Handle lane change animation\n        setLaneChanges(prev => ({\n          ...prev,\n          [data.device_id]: {\n            fromLane: data.old_lane,\n            toLane: data.new_lane,\n            reason: data.reason,\n            timestamp: Date.now()\n          }\n        }));\n\n        // Update vehicle lane after animation\n        setTimeout(() => {\n          setVehicles(prev => ({\n            ...prev,\n            [data.device_id]: {\n              ...prev[data.device_id],\n              current_lane: data.new_lane\n            }\n          }));\n          setLaneChanges(prev => {\n            const updated = {\n              ...prev\n            };\n            delete updated[data.device_id];\n            return updated;\n          });\n        }, 2000);\n        break;\n      case 'emergency_signal':\n        setEmergencyActive(true);\n        console.log('Emergency signal received:', data.message);\n        break;\n      case 'emergency_cleared':\n        setEmergencyActive(false);\n        console.log('Emergency cleared');\n        break;\n      default:\n        console.log('Unhandled message type:', data.type);\n    }\n  }, []);\n\n  // Initialize WebSocket connection and event listeners\n  useEffect(() => {\n    // Set up event listeners\n    const handleConnected = () => {\n      setIsConnected(true);\n      setConnectionError(null);\n    };\n    const handleDisconnected = event => {\n      setIsConnected(false);\n      if (event.code !== 1000) {\n        setConnectionError('Connection lost. Retrying...');\n      }\n    };\n    const handleError = error => {\n      setConnectionError('Connection error');\n      console.error('WebSocket error:', error);\n    };\n    const handleMaxReconnectAttemptsReached = () => {\n      setConnectionError('Failed to connect to server. Please refresh the page.');\n    };\n\n    // Add event listeners\n    websocketService.addEventListener('connected', handleConnected);\n    websocketService.addEventListener('disconnected', handleDisconnected);\n    websocketService.addEventListener('error', handleError);\n    websocketService.addEventListener('maxReconnectAttemptsReached', handleMaxReconnectAttemptsReached);\n    websocketService.addEventListener('welcome', handleWebSocketMessage);\n    websocketService.addEventListener('systemState', handleWebSocketMessage);\n    websocketService.addEventListener('positionUpdate', handleWebSocketMessage);\n    websocketService.addEventListener('laneChange', handleWebSocketMessage);\n    websocketService.addEventListener('emergencySignal', handleWebSocketMessage);\n    websocketService.addEventListener('emergencyCleared', handleWebSocketMessage);\n\n    // Initialize connection\n    if (!websocketService.isConnected) {\n      websocketService.connect();\n    } else {\n      setIsConnected(true);\n    }\n\n    // Cleanup function\n    return () => {\n      websocketService.removeEventListener('connected', handleConnected);\n      websocketService.removeEventListener('disconnected', handleDisconnected);\n      websocketService.removeEventListener('error', handleError);\n      websocketService.removeEventListener('maxReconnectAttemptsReached', handleMaxReconnectAttemptsReached);\n      websocketService.removeEventListener('welcome', handleWebSocketMessage);\n      websocketService.removeEventListener('systemState', handleWebSocketMessage);\n      websocketService.removeEventListener('positionUpdate', handleWebSocketMessage);\n      websocketService.removeEventListener('laneChange', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencySignal', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencyCleared', handleWebSocketMessage);\n    };\n  }, [handleWebSocketMessage]);\n\n  // Send emergency signal\n  const sendEmergencySignal = () => {\n    if (isConnected && isEmergencyVehicle) {\n      websocketService.sendEmergencySignal();\n      setEmergencyActive(true);\n    }\n  };\n\n  // Clear emergency signal\n  const clearEmergencySignal = () => {\n    if (isConnected && isEmergencyVehicle) {\n      websocketService.clearEmergencySignal();\n      setEmergencyActive(false);\n    }\n  };\n\n  // Send position update\n  const sendPositionUpdate = position => {\n    if (isConnected && deviceId) {\n      websocketService.sendPositionUpdate(position);\n    }\n  };\n\n  // Get vehicle style based on type and state\n  const getVehicleStyle = vehicle => {\n    var _VEHICLE_TYPES$vehicl, _VEHICLE_TYPES$vehicl2;\n    const baseStyle = {\n      left: `${vehicle.position_x || 0}px`,\n      top: `${(vehicle.current_lane - 1) * 50 + 10}px`,\n      width: `${((_VEHICLE_TYPES$vehicl = VEHICLE_TYPES[vehicle.vehicle_type]) === null || _VEHICLE_TYPES$vehicl === void 0 ? void 0 : _VEHICLE_TYPES$vehicl.width) || 40}px`,\n      height: `${((_VEHICLE_TYPES$vehicl2 = VEHICLE_TYPES[vehicle.vehicle_type]) === null || _VEHICLE_TYPES$vehicl2 === void 0 ? void 0 : _VEHICLE_TYPES$vehicl2.height) || 20}px`\n    };\n\n    // Add lane changing animation\n    if (laneChanges[vehicle.device_id]) {\n      const change = laneChanges[vehicle.device_id];\n      const progress = Math.min((Date.now() - change.timestamp) / 2000, 1);\n      const startY = (change.fromLane - 1) * 50 + 10;\n      const endY = (change.toLane - 1) * 50 + 10;\n      const currentY = startY + (endY - startY) * progress;\n      return {\n        ...baseStyle,\n        top: `${currentY}px`,\n        transform: `scale(${0.8 + progress * 0.2})`\n      };\n    }\n    return baseStyle;\n  };\n  const totalVehicles = Object.keys(vehicles).length;\n  const emergencyVehicles = Object.values(vehicles).filter(v => v.is_emergency_active).length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-dot ${isConnected ? 'connected' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: isConnected ? 'Connected' : 'Disconnected'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vehicle-counter\",\n      children: [\"Vehicles: \", totalVehicles, \" | Emergency: \", emergencyVehicles]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Vehicle Control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `device-info ${isConnected ? 'connected' : 'disconnected'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-badge ${isConnected ? 'connected' : 'disconnected'}`,\n          children: isConnected ? 'Connected' : 'Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Device ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 16\n          }, this), \" \", deviceId || 'Not assigned']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Vehicle:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 16\n          }, this), \" \", vehicleType ? (_VEHICLE_TYPES$vehicl3 = VEHICLE_TYPES[vehicleType]) === null || _VEHICLE_TYPES$vehicl3 === void 0 ? void 0 : _VEHICLE_TYPES$vehicl3.name : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), isEmergencyVehicle && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emergency-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `emergency-button ${emergencyActive ? 'emergency-active' : ''}`,\n          onClick: emergencyActive ? clearEmergencySignal : sendEmergencySignal,\n          disabled: !isConnected,\n          children: emergencyActive ? '🛑 Clear Emergency' : '🚨 Activate Emergency'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), connectionError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#dc3545',\n          fontSize: '12px',\n          marginTop: '10px'\n        },\n        children: connectionError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highway-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highway\",\n        children: [Object.entries(LANES).map(([laneNum, lane]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          style: {\n            width: `${100 / Object.keys(LANES).length}%`,\n            left: `${(laneNum - 1) / Object.keys(LANES).length * 100}%`\n          }\n        }, laneNum, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)), Object.entries(vehicles).map(([id, vehicle]) => {\n          var _VEHICLE_TYPES$vehicl4, _VEHICLE_TYPES$vehicl5, _VEHICLE_TYPES$vehicl6;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `vehicle ${((_VEHICLE_TYPES$vehicl4 = VEHICLE_TYPES[vehicle.vehicle_type]) === null || _VEHICLE_TYPES$vehicl4 === void 0 ? void 0 : _VEHICLE_TYPES$vehicl4.color) || 'regular'} ${laneChanges[id] ? 'lane-changing' : ''}`,\n            style: getVehicleStyle(vehicle),\n            title: `${(_VEHICLE_TYPES$vehicl5 = VEHICLE_TYPES[vehicle.vehicle_type]) === null || _VEHICLE_TYPES$vehicl5 === void 0 ? void 0 : _VEHICLE_TYPES$vehicl5.name} (${id.substring(0, 8)})`,\n            children: (_VEHICLE_TYPES$vehicl6 = VEHICLE_TYPES[vehicle.vehicle_type]) === null || _VEHICLE_TYPES$vehicl6 === void 0 ? void 0 : _VEHICLE_TYPES$vehicl6.name.substring(0, 2)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), !isConnected && !connectionError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), connectionError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connection Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: connectionError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWebSocket,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Retry Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ml1cbx6PFM3mchvVqnWqPmHTcLo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","websocketService","jsxDEV","_jsxDEV","VEHICLE_TYPES","regular_car","name","color","width","height","truck","motorcycle","emergency_vehicle","LANES","y","App","_s","_VEHICLE_TYPES$vehicl3","isConnected","setIsConnected","deviceId","setDeviceId","vehicleType","setVehicleType","isEmergencyVehicle","setIsEmergencyVehicle","emergencyActive","setEmergencyActive","vehicles","setVehicles","connectionError","setConnectionError","laneChanges","setLaneChanges","handleWebSocketMessage","data","_data$emergency_statu","type","device_id","vehicle_type","devices","emergency_status","active_emergency_device","prev","position","fromLane","old_lane","toLane","new_lane","reason","timestamp","Date","now","setTimeout","current_lane","updated","console","log","message","handleConnected","handleDisconnected","event","code","handleError","error","handleMaxReconnectAttemptsReached","addEventListener","connect","removeEventListener","sendEmergencySignal","clearEmergencySignal","sendPositionUpdate","getVehicleStyle","vehicle","_VEHICLE_TYPES$vehicl","_VEHICLE_TYPES$vehicl2","baseStyle","left","position_x","top","change","progress","Math","min","startY","endY","currentY","transform","totalVehicles","Object","keys","length","emergencyVehicles","values","filter","v","is_emergency_active","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","fontSize","marginTop","entries","map","laneNum","lane","id","_VEHICLE_TYPES$vehicl4","_VEHICLE_TYPES$vehicl5","_VEHICLE_TYPES$vehicl6","title","substring","connectWebSocket","_c","$RefreshReg$"],"sources":["/Users/masonforeman/Library/Mobile Documents/com~apple~CloudDocs/University/Year 2/Spring/Mobile Networking/Assignments/Assignment 3/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './index.css';\nimport websocketService from './services/websocketService';\n\nconst VEHICLE_TYPES = {\n  regular_car: { name: 'Car', color: 'regular', width: 40, height: 20 },\n  truck: { name: 'Truck', color: 'truck', width: 50, height: 20 },\n  motorcycle: { name: 'Motorcycle', color: 'motorcycle', width: 30, height: 15 },\n  emergency_vehicle: { name: 'Emergency', color: 'emergency', width: 40, height: 20 }\n};\n\nconst LANES = {\n  1: { name: 'Left Lane', y: 0 },\n  2: { name: 'Middle Lane', y: 50 },\n  3: { name: 'Right Lane', y: 100 }\n};\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [deviceId, setDeviceId] = useState(null);\n  const [vehicleType, setVehicleType] = useState(null);\n  const [isEmergencyVehicle, setIsEmergencyVehicle] = useState(false);\n  const [emergencyActive, setEmergencyActive] = useState(false);\n  const [vehicles, setVehicles] = useState({});\n  const [connectionError, setConnectionError] = useState(null);\n  const [laneChanges, setLaneChanges] = useState({});\n\n  // Handle WebSocket messages\n  const handleWebSocketMessage = useCallback((data) => {\n    switch (data.type) {\n      case 'welcome':\n        setDeviceId(data.device_id);\n        setVehicleType(data.vehicle_type);\n        setIsEmergencyVehicle(data.vehicle_type === 'emergency_vehicle');\n        break;\n\n      case 'system_state':\n        setVehicles(data.devices || {});\n        if (data.emergency_status?.active_emergency_device) {\n          setEmergencyActive(true);\n        }\n        break;\n\n      case 'position_update':\n        setVehicles(prev => ({\n          ...prev,\n          [data.device_id]: {\n            ...prev[data.device_id],\n            ...data.position\n          }\n        }));\n        break;\n\n      case 'lane_change':\n        // Handle lane change animation\n        setLaneChanges(prev => ({\n          ...prev,\n          [data.device_id]: {\n            fromLane: data.old_lane,\n            toLane: data.new_lane,\n            reason: data.reason,\n            timestamp: Date.now()\n          }\n        }));\n\n        // Update vehicle lane after animation\n        setTimeout(() => {\n          setVehicles(prev => ({\n            ...prev,\n            [data.device_id]: {\n              ...prev[data.device_id],\n              current_lane: data.new_lane\n            }\n          }));\n          setLaneChanges(prev => {\n            const updated = { ...prev };\n            delete updated[data.device_id];\n            return updated;\n          });\n        }, 2000);\n        break;\n\n      case 'emergency_signal':\n        setEmergencyActive(true);\n        console.log('Emergency signal received:', data.message);\n        break;\n\n      case 'emergency_cleared':\n        setEmergencyActive(false);\n        console.log('Emergency cleared');\n        break;\n\n      default:\n        console.log('Unhandled message type:', data.type);\n    }\n  }, []);\n\n  // Initialize WebSocket connection and event listeners\n  useEffect(() => {\n    // Set up event listeners\n    const handleConnected = () => {\n      setIsConnected(true);\n      setConnectionError(null);\n    };\n\n    const handleDisconnected = (event) => {\n      setIsConnected(false);\n      if (event.code !== 1000) {\n        setConnectionError('Connection lost. Retrying...');\n      }\n    };\n\n    const handleError = (error) => {\n      setConnectionError('Connection error');\n      console.error('WebSocket error:', error);\n    };\n\n    const handleMaxReconnectAttemptsReached = () => {\n      setConnectionError('Failed to connect to server. Please refresh the page.');\n    };\n\n    // Add event listeners\n    websocketService.addEventListener('connected', handleConnected);\n    websocketService.addEventListener('disconnected', handleDisconnected);\n    websocketService.addEventListener('error', handleError);\n    websocketService.addEventListener('maxReconnectAttemptsReached', handleMaxReconnectAttemptsReached);\n    websocketService.addEventListener('welcome', handleWebSocketMessage);\n    websocketService.addEventListener('systemState', handleWebSocketMessage);\n    websocketService.addEventListener('positionUpdate', handleWebSocketMessage);\n    websocketService.addEventListener('laneChange', handleWebSocketMessage);\n    websocketService.addEventListener('emergencySignal', handleWebSocketMessage);\n    websocketService.addEventListener('emergencyCleared', handleWebSocketMessage);\n\n    // Initialize connection\n    if (!websocketService.isConnected) {\n      websocketService.connect();\n    } else {\n      setIsConnected(true);\n    }\n\n    // Cleanup function\n    return () => {\n      websocketService.removeEventListener('connected', handleConnected);\n      websocketService.removeEventListener('disconnected', handleDisconnected);\n      websocketService.removeEventListener('error', handleError);\n      websocketService.removeEventListener('maxReconnectAttemptsReached', handleMaxReconnectAttemptsReached);\n      websocketService.removeEventListener('welcome', handleWebSocketMessage);\n      websocketService.removeEventListener('systemState', handleWebSocketMessage);\n      websocketService.removeEventListener('positionUpdate', handleWebSocketMessage);\n      websocketService.removeEventListener('laneChange', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencySignal', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencyCleared', handleWebSocketMessage);\n    };\n  }, [handleWebSocketMessage]);\n\n  // Send emergency signal\n  const sendEmergencySignal = () => {\n    if (isConnected && isEmergencyVehicle) {\n      websocketService.sendEmergencySignal();\n      setEmergencyActive(true);\n    }\n  };\n\n  // Clear emergency signal\n  const clearEmergencySignal = () => {\n    if (isConnected && isEmergencyVehicle) {\n      websocketService.clearEmergencySignal();\n      setEmergencyActive(false);\n    }\n  };\n\n  // Send position update\n  const sendPositionUpdate = (position) => {\n    if (isConnected && deviceId) {\n      websocketService.sendPositionUpdate(position);\n    }\n  };\n\n  // Get vehicle style based on type and state\n  const getVehicleStyle = (vehicle) => {\n    const baseStyle = {\n      left: `${vehicle.position_x || 0}px`,\n      top: `${(vehicle.current_lane - 1) * 50 + 10}px`,\n      width: `${VEHICLE_TYPES[vehicle.vehicle_type]?.width || 40}px`,\n      height: `${VEHICLE_TYPES[vehicle.vehicle_type]?.height || 20}px`,\n    };\n\n    // Add lane changing animation\n    if (laneChanges[vehicle.device_id]) {\n      const change = laneChanges[vehicle.device_id];\n      const progress = Math.min((Date.now() - change.timestamp) / 2000, 1);\n      const startY = (change.fromLane - 1) * 50 + 10;\n      const endY = (change.toLane - 1) * 50 + 10;\n      const currentY = startY + (endY - startY) * progress;\n\n      return {\n        ...baseStyle,\n        top: `${currentY}px`,\n        transform: `scale(${0.8 + progress * 0.2})`,\n      };\n    }\n\n    return baseStyle;\n  };\n\n  const totalVehicles = Object.keys(vehicles).length;\n  const emergencyVehicles = Object.values(vehicles).filter(v => v.is_emergency_active).length;\n\n  return (\n    <div className=\"App\">\n      {/* Connection Status */}\n      <div className=\"connection-status\">\n        <div className={`status-dot ${isConnected ? 'connected' : ''}`} />\n        <span>{isConnected ? 'Connected' : 'Disconnected'}</span>\n      </div>\n\n      {/* Vehicle Counter */}\n      <div className=\"vehicle-counter\">\n        Vehicles: {totalVehicles} | Emergency: {emergencyVehicles}\n      </div>\n\n      {/* Control Panel */}\n      <div className=\"control-panel\">\n        <h3>Vehicle Control</h3>\n\n        <div className={`device-info ${isConnected ? 'connected' : 'disconnected'}`}>\n          <div className={`status-badge ${isConnected ? 'connected' : 'disconnected'}`}>\n            {isConnected ? 'Connected' : 'Disconnected'}\n          </div>\n          <div><strong>Device ID:</strong> {deviceId || 'Not assigned'}</div>\n          <div><strong>Vehicle:</strong> {vehicleType ? VEHICLE_TYPES[vehicleType]?.name : 'Unknown'}</div>\n        </div>\n\n        {isEmergencyVehicle && (\n          <div className=\"emergency-controls\">\n            <button\n              className={`emergency-button ${emergencyActive ? 'emergency-active' : ''}`}\n              onClick={emergencyActive ? clearEmergencySignal : sendEmergencySignal}\n              disabled={!isConnected}\n            >\n              {emergencyActive ? '🛑 Clear Emergency' : '🚨 Activate Emergency'}\n            </button>\n          </div>\n        )}\n\n        {connectionError && (\n          <div style={{ color: '#dc3545', fontSize: '12px', marginTop: '10px' }}>\n            {connectionError}\n          </div>\n        )}\n      </div>\n\n      {/* Highway Simulation */}\n      <div className=\"highway-container\">\n        <div className=\"highway\">\n          {/* Lane Dividers */}\n          {Object.entries(LANES).map(([laneNum, lane]) => (\n            <div\n              key={laneNum}\n              className=\"lane\"\n              style={{\n                width: `${100 / Object.keys(LANES).length}%`,\n                left: `${((laneNum - 1) / Object.keys(LANES).length) * 100}%`\n              }}\n            />\n          ))}\n\n          {/* Vehicles */}\n          {Object.entries(vehicles).map(([id, vehicle]) => (\n            <div\n              key={id}\n              className={`vehicle ${VEHICLE_TYPES[vehicle.vehicle_type]?.color || 'regular'} ${laneChanges[id] ? 'lane-changing' : ''}`}\n              style={getVehicleStyle(vehicle)}\n              title={`${VEHICLE_TYPES[vehicle.vehicle_type]?.name} (${id.substring(0, 8)})`}\n            >\n              {VEHICLE_TYPES[vehicle.vehicle_type]?.name.substring(0, 2)}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Loading/Error States */}\n      {!isConnected && !connectionError && (\n        <div className=\"loading\">\n          <div className=\"loading-spinner\" />\n          <div>Connecting to server...</div>\n        </div>\n      )}\n\n      {connectionError && (\n        <div className=\"error-message\">\n          <h3>Connection Error</h3>\n          <p>{connectionError}</p>\n          <button onClick={connectWebSocket} style={{ marginTop: '10px' }}>\n            Retry Connection\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}