{"ast":null,"code":"var _jsxFileName = \"/Users/masonforeman/Library/Mobile Documents/com~apple~CloudDocs/University/Year 2/Spring/Mobile Networking/Assignments/Assignment 3/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './index.css';\nimport websocketService from './services/websocketService';\nimport LoginPage from './LoginPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VEHICLE_TYPES = {\n  regular_car: {\n    name: 'Car',\n    color: 'regular',\n    width: 40,\n    height: 20\n  },\n  truck: {\n    name: 'Truck',\n    color: 'truck',\n    width: 50,\n    height: 20\n  },\n  motorcycle: {\n    name: 'Motorcycle',\n    color: 'motorcycle',\n    width: 30,\n    height: 15\n  },\n  emergency_vehicle: {\n    name: 'Emergency',\n    color: 'emergency',\n    width: 40,\n    height: 20\n  }\n};\nconst LANES = {\n  1: {\n    name: 'Left Lane',\n    y: 0\n  },\n  2: {\n    name: 'Middle Lane',\n    y: 50\n  },\n  3: {\n    name: 'Right Lane',\n    y: 100\n  }\n};\nfunction App() {\n  _s();\n  var _VEHICLE_TYPES$vehicl3, _LANES$myLane;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [userColor, setUserColor] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [deviceId, setDeviceId] = useState(null);\n  const [vehicleType, setVehicleType] = useState(null);\n  const [isEmergencyVehicle, setIsEmergencyVehicle] = useState(false);\n  const [emergencyActive, setEmergencyActive] = useState(false);\n  const [vehicles, setVehicles] = useState({});\n  const [connectionError, setConnectionError] = useState(null);\n  const [laneChanges, setLaneChanges] = useState({});\n  const [controlLocked, setControlLocked] = useState(false); // Emergency takeover\n  const [myLane, setMyLane] = useState(2); // Student's current lane\n\n  // Handle login\n  const handleLogin = (code, name) => {\n    setUserName(name);\n    setUserColor(generateRandomColor());\n    setIsLoggedIn(true);\n\n    // Connect to WebSocket with name\n    websocketService.connect(name);\n  };\n\n  // Generate random car color\n  const generateRandomColor = () => {\n    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE', '#85C1E9', '#F8C471', '#82E0AA', '#F1948A', '#85C1E9', '#D7BDE2'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  // Handle WebSocket messages\n  const handleWebSocketMessage = useCallback(data => {\n    var _data$emergency_statu;\n    switch (data.type) {\n      case 'welcome':\n        setDeviceId(data.device_id);\n        setVehicleType(data.vehicle_type);\n        setIsEmergencyVehicle(data.vehicle_type === 'emergency_vehicle');\n        break;\n      case 'system_state':\n        setVehicles(data.devices || {});\n        if ((_data$emergency_statu = data.emergency_status) !== null && _data$emergency_statu !== void 0 && _data$emergency_statu.active_emergency_device) {\n          setEmergencyActive(true);\n        }\n        break;\n      case 'position_update':\n        setVehicles(prev => ({\n          ...prev,\n          [data.device_id]: {\n            ...prev[data.device_id],\n            ...data.position\n          }\n        }));\n        break;\n      case 'lane_change':\n        // Handle lane change animation\n        setLaneChanges(prev => ({\n          ...prev,\n          [data.device_id]: {\n            fromLane: data.old_lane,\n            toLane: data.new_lane,\n            reason: data.reason,\n            timestamp: Date.now()\n          }\n        }));\n\n        // Update vehicle lane after animation\n        setTimeout(() => {\n          setVehicles(prev => ({\n            ...prev,\n            [data.device_id]: {\n              ...prev[data.device_id],\n              current_lane: data.new_lane\n            }\n          }));\n          setLaneChanges(prev => {\n            const updated = {\n              ...prev\n            };\n            delete updated[data.device_id];\n            return updated;\n          });\n        }, 2000);\n        break;\n      case 'emergency_signal':\n      case 'emergency_takeover':\n        setEmergencyActive(true);\n        if (data.takeover) {\n          setControlLocked(true);\n          console.log('🚨 EMERGENCY TAKEOVER - Control locked!', data.message);\n          // Auto-move to right lane during takeover\n          setMyLane(3);\n        } else {\n          console.log('Emergency signal received:', data.message);\n        }\n        break;\n      case 'emergency_cleared':\n        setEmergencyActive(false);\n        setControlLocked(false);\n        console.log('🟢 Emergency cleared - Control restored');\n        break;\n      default:\n        console.log('Unhandled message type:', data.type);\n    }\n  }, []);\n\n  // Initialize WebSocket connection and event listeners\n  useEffect(() => {\n    // Set up event listeners\n    const handleConnected = () => {\n      setIsConnected(true);\n      setConnectionError(null);\n    };\n    const handleDisconnected = event => {\n      setIsConnected(false);\n      if (event.code !== 1000) {\n        setConnectionError('Connection lost. Retrying...');\n      }\n    };\n    const handleError = error => {\n      setConnectionError('Connection error');\n      console.error('WebSocket error:', error);\n    };\n    const handleMaxReconnectAttemptsReached = () => {\n      setConnectionError('Failed to connect to server. Please refresh the page.');\n    };\n\n    // Add event listeners\n    websocketService.addEventListener('connected', handleConnected);\n    websocketService.addEventListener('disconnected', handleDisconnected);\n    websocketService.addEventListener('error', handleError);\n    websocketService.addEventListener('maxReconnectAttemptsReached', handleMaxReconnectAttemptsReached);\n    websocketService.addEventListener('welcome', handleWebSocketMessage);\n    websocketService.addEventListener('systemState', handleWebSocketMessage);\n    websocketService.addEventListener('positionUpdate', handleWebSocketMessage);\n    websocketService.addEventListener('laneChange', handleWebSocketMessage);\n    websocketService.addEventListener('emergencySignal', handleWebSocketMessage);\n    websocketService.addEventListener('emergencyCleared', handleWebSocketMessage);\n\n    // Initialize connection\n    if (!websocketService.isConnected) {\n      websocketService.connect();\n    } else {\n      setIsConnected(true);\n    }\n\n    // Cleanup function\n    return () => {\n      websocketService.removeEventListener('connected', handleConnected);\n      websocketService.removeEventListener('disconnected', handleDisconnected);\n      websocketService.removeEventListener('error', handleError);\n      websocketService.removeEventListener('maxReconnectAttemptsReached', handleMaxReconnectAttemptsReached);\n      websocketService.removeEventListener('welcome', handleWebSocketMessage);\n      websocketService.removeEventListener('systemState', handleWebSocketMessage);\n      websocketService.removeEventListener('positionUpdate', handleWebSocketMessage);\n      websocketService.removeEventListener('laneChange', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencySignal', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencyCleared', handleWebSocketMessage);\n    };\n  }, [handleWebSocketMessage]);\n\n  // Send emergency signal\n  const sendEmergencySignal = () => {\n    if (isConnected && isEmergencyVehicle) {\n      websocketService.sendEmergencySignal();\n      setEmergencyActive(true);\n    }\n  };\n\n  // Clear emergency signal\n  const clearEmergencySignal = () => {\n    if (isConnected && isEmergencyVehicle) {\n      websocketService.clearEmergencySignal();\n      setEmergencyActive(false);\n    }\n  };\n\n  // Send position update\n  const sendPositionUpdate = position => {\n    if (isConnected && deviceId) {\n      websocketService.sendPositionUpdate(position);\n    }\n  };\n\n  // Change lane (student control)\n  const changeLane = newLane => {\n    if (isConnected && !controlLocked && newLane !== myLane) {\n      setMyLane(newLane);\n      websocketService.sendLaneChange(newLane, 'manual');\n      console.log(`Changed to lane ${newLane}`);\n    }\n  };\n\n  // Get vehicle style based on type and state\n  const getVehicleStyle = vehicle => {\n    var _VEHICLE_TYPES$vehicl, _VEHICLE_TYPES$vehicl2;\n    const baseStyle = {\n      left: `${vehicle.position_x || 0}px`,\n      top: `${(vehicle.current_lane - 1) * 50 + 10}px`,\n      width: `${((_VEHICLE_TYPES$vehicl = VEHICLE_TYPES[vehicle.vehicle_type]) === null || _VEHICLE_TYPES$vehicl === void 0 ? void 0 : _VEHICLE_TYPES$vehicl.width) || 40}px`,\n      height: `${((_VEHICLE_TYPES$vehicl2 = VEHICLE_TYPES[vehicle.vehicle_type]) === null || _VEHICLE_TYPES$vehicl2 === void 0 ? void 0 : _VEHICLE_TYPES$vehicl2.height) || 20}px`\n    };\n\n    // Add lane changing animation\n    if (laneChanges[vehicle.device_id]) {\n      const change = laneChanges[vehicle.device_id];\n      const progress = Math.min((Date.now() - change.timestamp) / 2000, 1);\n      const startY = (change.fromLane - 1) * 50 + 10;\n      const endY = (change.toLane - 1) * 50 + 10;\n      const currentY = startY + (endY - startY) * progress;\n      return {\n        ...baseStyle,\n        top: `${currentY}px`,\n        transform: `scale(${0.8 + progress * 0.2})`\n      };\n    }\n    return baseStyle;\n  };\n  const totalVehicles = Object.keys(vehicles).length;\n  const emergencyVehicles = Object.values(vehicles).filter(v => v.is_emergency_active).length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-dot ${isConnected ? 'connected' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: isConnected ? 'Connected' : 'Disconnected'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vehicle-counter\",\n      children: [\"Vehicles: \", totalVehicles, \" | Emergency: \", emergencyVehicles]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Vehicle Control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `device-info ${isConnected ? 'connected' : 'disconnected'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-badge ${isConnected ? 'connected' : 'disconnected'}`,\n          children: isConnected ? 'Connected' : 'Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Device ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 16\n          }, this), \" \", deviceId || 'Not assigned']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Vehicle:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 16\n          }, this), \" \", vehicleType ? (_VEHICLE_TYPES$vehicl3 = VEHICLE_TYPES[vehicleType]) === null || _VEHICLE_TYPES$vehicl3 === void 0 ? void 0 : _VEHICLE_TYPES$vehicl3.name : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), !isEmergencyVehicle && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lane-controls\",\n        style: {\n          marginTop: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: controlLocked ? '🔒 Control Locked (Emergency)' : '🚗 Drive Your Vehicle'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeLane(1),\n            disabled: !isConnected || controlLocked || myLane === 1,\n            style: {\n              padding: '10px 20px',\n              fontSize: '14px',\n              cursor: controlLocked || myLane === 1 ? 'not-allowed' : 'pointer',\n              opacity: controlLocked || myLane === 1 ? 0.5 : 1\n            },\n            children: \"\\u2B05\\uFE0F Left Lane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeLane(2),\n            disabled: !isConnected || controlLocked || myLane === 2,\n            style: {\n              padding: '10px 20px',\n              fontSize: '14px',\n              cursor: controlLocked || myLane === 2 ? 'not-allowed' : 'pointer',\n              opacity: controlLocked || myLane === 2 ? 0.5 : 1\n            },\n            children: \"\\u2B06\\uFE0F Middle Lane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeLane(3),\n            disabled: !isConnected || controlLocked || myLane === 3,\n            style: {\n              padding: '10px 20px',\n              fontSize: '14px',\n              cursor: controlLocked || myLane === 3 ? 'not-allowed' : 'pointer',\n              opacity: controlLocked || myLane === 3 ? 0.5 : 1\n            },\n            children: \"\\u27A1\\uFE0F Right Lane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            fontSize: '12px',\n            color: '#666'\n          },\n          children: [\"Current Lane: \", ((_LANES$myLane = LANES[myLane]) === null || _LANES$myLane === void 0 ? void 0 : _LANES$myLane.name) || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), isEmergencyVehicle && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emergency-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `emergency-button ${emergencyActive ? 'emergency-active' : ''}`,\n          onClick: emergencyActive ? clearEmergencySignal : sendEmergencySignal,\n          disabled: !isConnected,\n          children: emergencyActive ? '🛑 Clear Emergency' : '🚨 Activate Emergency'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this), connectionError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#dc3545',\n          fontSize: '12px',\n          marginTop: '10px'\n        },\n        children: connectionError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highway-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highway\",\n        children: [Object.entries(LANES).map(([laneNum, lane]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          style: {\n            width: `${100 / Object.keys(LANES).length}%`,\n            left: `${(laneNum - 1) / Object.keys(LANES).length * 100}%`\n          }\n        }, laneNum, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)), Object.entries(vehicles).map(([id, vehicle]) => {\n          var _VEHICLE_TYPES$vehicl4, _VEHICLE_TYPES$vehicl5, _VEHICLE_TYPES$vehicl6;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `vehicle ${((_VEHICLE_TYPES$vehicl4 = VEHICLE_TYPES[vehicle.vehicle_type]) === null || _VEHICLE_TYPES$vehicl4 === void 0 ? void 0 : _VEHICLE_TYPES$vehicl4.color) || 'regular'} ${laneChanges[id] ? 'lane-changing' : ''}`,\n            style: getVehicleStyle(vehicle),\n            title: `${(_VEHICLE_TYPES$vehicl5 = VEHICLE_TYPES[vehicle.vehicle_type]) === null || _VEHICLE_TYPES$vehicl5 === void 0 ? void 0 : _VEHICLE_TYPES$vehicl5.name} (${id.substring(0, 8)})`,\n            children: (_VEHICLE_TYPES$vehicl6 = VEHICLE_TYPES[vehicle.vehicle_type]) === null || _VEHICLE_TYPES$vehicl6 === void 0 ? void 0 : _VEHICLE_TYPES$vehicl6.name.substring(0, 2)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), !isConnected && !connectionError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }, this), connectionError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connection Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: connectionError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Retry Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j8Yll88z7D6LVJACyc8Cm4u92S4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","websocketService","LoginPage","jsxDEV","_jsxDEV","VEHICLE_TYPES","regular_car","name","color","width","height","truck","motorcycle","emergency_vehicle","LANES","y","App","_s","_VEHICLE_TYPES$vehicl3","_LANES$myLane","isLoggedIn","setIsLoggedIn","userName","setUserName","userColor","setUserColor","isConnected","setIsConnected","deviceId","setDeviceId","vehicleType","setVehicleType","isEmergencyVehicle","setIsEmergencyVehicle","emergencyActive","setEmergencyActive","vehicles","setVehicles","connectionError","setConnectionError","laneChanges","setLaneChanges","controlLocked","setControlLocked","myLane","setMyLane","handleLogin","code","generateRandomColor","connect","colors","Math","floor","random","length","handleWebSocketMessage","data","_data$emergency_statu","type","device_id","vehicle_type","devices","emergency_status","active_emergency_device","prev","position","fromLane","old_lane","toLane","new_lane","reason","timestamp","Date","now","setTimeout","current_lane","updated","takeover","console","log","message","handleConnected","handleDisconnected","event","handleError","error","handleMaxReconnectAttemptsReached","addEventListener","removeEventListener","sendEmergencySignal","clearEmergencySignal","sendPositionUpdate","changeLane","newLane","sendLaneChange","getVehicleStyle","vehicle","_VEHICLE_TYPES$vehicl","_VEHICLE_TYPES$vehicl2","baseStyle","left","position_x","top","change","progress","min","startY","endY","currentY","transform","totalVehicles","Object","keys","emergencyVehicles","values","filter","v","is_emergency_active","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","marginBottom","display","gap","justifyContent","onClick","disabled","padding","fontSize","cursor","opacity","entries","map","laneNum","lane","id","_VEHICLE_TYPES$vehicl4","_VEHICLE_TYPES$vehicl5","_VEHICLE_TYPES$vehicl6","title","substring","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/masonforeman/Library/Mobile Documents/com~apple~CloudDocs/University/Year 2/Spring/Mobile Networking/Assignments/Assignment 3/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './index.css';\nimport websocketService from './services/websocketService';\nimport LoginPage from './LoginPage';\n\nconst VEHICLE_TYPES = {\n  regular_car: { name: 'Car', color: 'regular', width: 40, height: 20 },\n  truck: { name: 'Truck', color: 'truck', width: 50, height: 20 },\n  motorcycle: { name: 'Motorcycle', color: 'motorcycle', width: 30, height: 15 },\n  emergency_vehicle: { name: 'Emergency', color: 'emergency', width: 40, height: 20 }\n};\n\nconst LANES = {\n  1: { name: 'Left Lane', y: 0 },\n  2: { name: 'Middle Lane', y: 50 },\n  3: { name: 'Right Lane', y: 100 }\n};\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [userColor, setUserColor] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [deviceId, setDeviceId] = useState(null);\n  const [vehicleType, setVehicleType] = useState(null);\n  const [isEmergencyVehicle, setIsEmergencyVehicle] = useState(false);\n  const [emergencyActive, setEmergencyActive] = useState(false);\n  const [vehicles, setVehicles] = useState({});\n  const [connectionError, setConnectionError] = useState(null);\n  const [laneChanges, setLaneChanges] = useState({});\n  const [controlLocked, setControlLocked] = useState(false);  // Emergency takeover\n  const [myLane, setMyLane] = useState(2);  // Student's current lane\n\n  // Handle login\n  const handleLogin = (code, name) => {\n    setUserName(name);\n    setUserColor(generateRandomColor());\n    setIsLoggedIn(true);\n    \n    // Connect to WebSocket with name\n    websocketService.connect(name);\n  };\n\n  // Generate random car color\n  const generateRandomColor = () => {\n    const colors = [\n      '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7',\n      '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE', '#85C1E9',\n      '#F8C471', '#82E0AA', '#F1948A', '#85C1E9', '#D7BDE2'\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  // Handle WebSocket messages\n  const handleWebSocketMessage = useCallback((data) => {\n    switch (data.type) {\n      case 'welcome':\n        setDeviceId(data.device_id);\n        setVehicleType(data.vehicle_type);\n        setIsEmergencyVehicle(data.vehicle_type === 'emergency_vehicle');\n        break;\n\n      case 'system_state':\n        setVehicles(data.devices || {});\n        if (data.emergency_status?.active_emergency_device) {\n          setEmergencyActive(true);\n        }\n        break;\n\n      case 'position_update':\n        setVehicles(prev => ({\n          ...prev,\n          [data.device_id]: {\n            ...prev[data.device_id],\n            ...data.position\n          }\n        }));\n        break;\n\n      case 'lane_change':\n        // Handle lane change animation\n        setLaneChanges(prev => ({\n          ...prev,\n          [data.device_id]: {\n            fromLane: data.old_lane,\n            toLane: data.new_lane,\n            reason: data.reason,\n            timestamp: Date.now()\n          }\n        }));\n\n        // Update vehicle lane after animation\n        setTimeout(() => {\n          setVehicles(prev => ({\n            ...prev,\n            [data.device_id]: {\n              ...prev[data.device_id],\n              current_lane: data.new_lane\n            }\n          }));\n          setLaneChanges(prev => {\n            const updated = { ...prev };\n            delete updated[data.device_id];\n            return updated;\n          });\n        }, 2000);\n        break;\n\n      case 'emergency_signal':\n      case 'emergency_takeover':\n        setEmergencyActive(true);\n        if (data.takeover) {\n          setControlLocked(true);\n          console.log('🚨 EMERGENCY TAKEOVER - Control locked!', data.message);\n          // Auto-move to right lane during takeover\n          setMyLane(3);\n        } else {\n          console.log('Emergency signal received:', data.message);\n        }\n        break;\n\n      case 'emergency_cleared':\n        setEmergencyActive(false);\n        setControlLocked(false);\n        console.log('🟢 Emergency cleared - Control restored');\n        break;\n\n      default:\n        console.log('Unhandled message type:', data.type);\n    }\n  }, []);\n\n  // Initialize WebSocket connection and event listeners\n  useEffect(() => {\n    // Set up event listeners\n    const handleConnected = () => {\n      setIsConnected(true);\n      setConnectionError(null);\n    };\n\n    const handleDisconnected = (event) => {\n      setIsConnected(false);\n      if (event.code !== 1000) {\n        setConnectionError('Connection lost. Retrying...');\n      }\n    };\n\n    const handleError = (error) => {\n      setConnectionError('Connection error');\n      console.error('WebSocket error:', error);\n    };\n\n    const handleMaxReconnectAttemptsReached = () => {\n      setConnectionError('Failed to connect to server. Please refresh the page.');\n    };\n\n    // Add event listeners\n    websocketService.addEventListener('connected', handleConnected);\n    websocketService.addEventListener('disconnected', handleDisconnected);\n    websocketService.addEventListener('error', handleError);\n    websocketService.addEventListener('maxReconnectAttemptsReached', handleMaxReconnectAttemptsReached);\n    websocketService.addEventListener('welcome', handleWebSocketMessage);\n    websocketService.addEventListener('systemState', handleWebSocketMessage);\n    websocketService.addEventListener('positionUpdate', handleWebSocketMessage);\n    websocketService.addEventListener('laneChange', handleWebSocketMessage);\n    websocketService.addEventListener('emergencySignal', handleWebSocketMessage);\n    websocketService.addEventListener('emergencyCleared', handleWebSocketMessage);\n\n    // Initialize connection\n    if (!websocketService.isConnected) {\n      websocketService.connect();\n    } else {\n      setIsConnected(true);\n    }\n\n    // Cleanup function\n    return () => {\n      websocketService.removeEventListener('connected', handleConnected);\n      websocketService.removeEventListener('disconnected', handleDisconnected);\n      websocketService.removeEventListener('error', handleError);\n      websocketService.removeEventListener('maxReconnectAttemptsReached', handleMaxReconnectAttemptsReached);\n      websocketService.removeEventListener('welcome', handleWebSocketMessage);\n      websocketService.removeEventListener('systemState', handleWebSocketMessage);\n      websocketService.removeEventListener('positionUpdate', handleWebSocketMessage);\n      websocketService.removeEventListener('laneChange', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencySignal', handleWebSocketMessage);\n      websocketService.removeEventListener('emergencyCleared', handleWebSocketMessage);\n    };\n  }, [handleWebSocketMessage]);\n\n  // Send emergency signal\n  const sendEmergencySignal = () => {\n    if (isConnected && isEmergencyVehicle) {\n      websocketService.sendEmergencySignal();\n      setEmergencyActive(true);\n    }\n  };\n\n  // Clear emergency signal\n  const clearEmergencySignal = () => {\n    if (isConnected && isEmergencyVehicle) {\n      websocketService.clearEmergencySignal();\n      setEmergencyActive(false);\n    }\n  };\n\n  // Send position update\n  const sendPositionUpdate = (position) => {\n    if (isConnected && deviceId) {\n      websocketService.sendPositionUpdate(position);\n    }\n  };\n\n  // Change lane (student control)\n  const changeLane = (newLane) => {\n    if (isConnected && !controlLocked && newLane !== myLane) {\n      setMyLane(newLane);\n      websocketService.sendLaneChange(newLane, 'manual');\n      console.log(`Changed to lane ${newLane}`);\n    }\n  };\n\n  // Get vehicle style based on type and state\n  const getVehicleStyle = (vehicle) => {\n    const baseStyle = {\n      left: `${vehicle.position_x || 0}px`,\n      top: `${(vehicle.current_lane - 1) * 50 + 10}px`,\n      width: `${VEHICLE_TYPES[vehicle.vehicle_type]?.width || 40}px`,\n      height: `${VEHICLE_TYPES[vehicle.vehicle_type]?.height || 20}px`,\n    };\n\n    // Add lane changing animation\n    if (laneChanges[vehicle.device_id]) {\n      const change = laneChanges[vehicle.device_id];\n      const progress = Math.min((Date.now() - change.timestamp) / 2000, 1);\n      const startY = (change.fromLane - 1) * 50 + 10;\n      const endY = (change.toLane - 1) * 50 + 10;\n      const currentY = startY + (endY - startY) * progress;\n\n      return {\n        ...baseStyle,\n        top: `${currentY}px`,\n        transform: `scale(${0.8 + progress * 0.2})`,\n      };\n    }\n\n    return baseStyle;\n  };\n\n  const totalVehicles = Object.keys(vehicles).length;\n  const emergencyVehicles = Object.values(vehicles).filter(v => v.is_emergency_active).length;\n\n  return (\n    <div className=\"App\">\n      {/* Connection Status */}\n      <div className=\"connection-status\">\n        <div className={`status-dot ${isConnected ? 'connected' : ''}`} />\n        <span>{isConnected ? 'Connected' : 'Disconnected'}</span>\n      </div>\n\n      {/* Vehicle Counter */}\n      <div className=\"vehicle-counter\">\n        Vehicles: {totalVehicles} | Emergency: {emergencyVehicles}\n      </div>\n\n      {/* Control Panel */}\n      <div className=\"control-panel\">\n        <h3>Vehicle Control</h3>\n\n        <div className={`device-info ${isConnected ? 'connected' : 'disconnected'}`}>\n          <div className={`status-badge ${isConnected ? 'connected' : 'disconnected'}`}>\n            {isConnected ? 'Connected' : 'Disconnected'}\n          </div>\n          <div><strong>Device ID:</strong> {deviceId || 'Not assigned'}</div>\n          <div><strong>Vehicle:</strong> {vehicleType ? VEHICLE_TYPES[vehicleType]?.name : 'Unknown'}</div>\n        </div>\n\n        {/* Lane Control Buttons - for students to drive */}\n        {!isEmergencyVehicle && (\n          <div className=\"lane-controls\" style={{ marginTop: '15px' }}>\n            <h4 style={{ marginBottom: '10px' }}>\n              {controlLocked ? '🔒 Control Locked (Emergency)' : '🚗 Drive Your Vehicle'}\n            </h4>\n            <div style={{ display: 'flex', gap: '10px', justifyContent: 'center' }}>\n              <button\n                onClick={() => changeLane(1)}\n                disabled={!isConnected || controlLocked || myLane === 1}\n                style={{\n                  padding: '10px 20px',\n                  fontSize: '14px',\n                  cursor: (controlLocked || myLane === 1) ? 'not-allowed' : 'pointer',\n                  opacity: (controlLocked || myLane === 1) ? 0.5 : 1\n                }}\n              >\n                ⬅️ Left Lane\n              </button>\n              <button\n                onClick={() => changeLane(2)}\n                disabled={!isConnected || controlLocked || myLane === 2}\n                style={{\n                  padding: '10px 20px',\n                  fontSize: '14px',\n                  cursor: (controlLocked || myLane === 2) ? 'not-allowed' : 'pointer',\n                  opacity: (controlLocked || myLane === 2) ? 0.5 : 1\n                }}\n              >\n                ⬆️ Middle Lane\n              </button>\n              <button\n                onClick={() => changeLane(3)}\n                disabled={!isConnected || controlLocked || myLane === 3}\n                style={{\n                  padding: '10px 20px',\n                  fontSize: '14px',\n                  cursor: (controlLocked || myLane === 3) ? 'not-allowed' : 'pointer',\n                  opacity: (controlLocked || myLane === 3) ? 0.5 : 1\n                }}\n              >\n                ➡️ Right Lane\n              </button>\n            </div>\n            <div style={{ marginTop: '10px', fontSize: '12px', color: '#666' }}>\n              Current Lane: {LANES[myLane]?.name || 'Unknown'}\n            </div>\n          </div>\n        )}\n\n        {isEmergencyVehicle && (\n          <div className=\"emergency-controls\">\n            <button\n              className={`emergency-button ${emergencyActive ? 'emergency-active' : ''}`}\n              onClick={emergencyActive ? clearEmergencySignal : sendEmergencySignal}\n              disabled={!isConnected}\n            >\n              {emergencyActive ? '🛑 Clear Emergency' : '🚨 Activate Emergency'}\n            </button>\n          </div>\n        )}\n\n        {connectionError && (\n          <div style={{ color: '#dc3545', fontSize: '12px', marginTop: '10px' }}>\n            {connectionError}\n          </div>\n        )}\n      </div>\n\n      {/* Highway Simulation */}\n      <div className=\"highway-container\">\n        <div className=\"highway\">\n          {/* Lane Dividers */}\n          {Object.entries(LANES).map(([laneNum, lane]) => (\n            <div\n              key={laneNum}\n              className=\"lane\"\n              style={{\n                width: `${100 / Object.keys(LANES).length}%`,\n                left: `${((laneNum - 1) / Object.keys(LANES).length) * 100}%`\n              }}\n            />\n          ))}\n\n          {/* Vehicles */}\n          {Object.entries(vehicles).map(([id, vehicle]) => (\n            <div\n              key={id}\n              className={`vehicle ${VEHICLE_TYPES[vehicle.vehicle_type]?.color || 'regular'} ${laneChanges[id] ? 'lane-changing' : ''}`}\n              style={getVehicleStyle(vehicle)}\n              title={`${VEHICLE_TYPES[vehicle.vehicle_type]?.name} (${id.substring(0, 8)})`}\n            >\n              {VEHICLE_TYPES[vehicle.vehicle_type]?.name.substring(0, 2)}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Loading/Error States */}\n      {!isConnected && !connectionError && (\n        <div className=\"loading\">\n          <div className=\"loading-spinner\" />\n          <div>Connecting to server...</div>\n        </div>\n      )}\n\n      {connectionError && (\n        <div className=\"error-message\">\n          <h3>Connection Error</h3>\n          <p>{connectionError}</p>\n          <button onClick={() => window.location.reload()} style={{ marginTop: '10px' }}>\n            Retry Connection\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}